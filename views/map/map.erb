<%
  user_ids = casts.mapo(:user_id).uniq
  locations = $locations.get_many(user_id: {'$in': user_ids}).select {|loc| loc[:lat] && loc[:lng]  }

  x=1
%>
<style>
#map {
  zborder: 1px solid red;
  height: 400px;
  margin-right: 50px;
}

#description {
  font-family: Roboto;
  font-size: 15px;
  font-weight: 300;
}

#infowindow-content .title {
  font-weight: bold;
}

#infowindow-content {
  display: none;
}

#map #infowindow-content {
  display: inline;
}

.pac-card {
  margin: 10px 10px 0 0;
  border-radius: 2px 0 0 2px;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  outline: none;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
  background-color: #fff;
  font-family: Roboto;
}

#pac-container {
  padding-bottom: 12px;
  margin-right: 12px;
}

.pac-controls {
  display: inline-block;
  padding: 5px 11px;
}

.pac-controls label {
  font-family: Roboto;
  font-size: 13px;
  font-weight: 300;
}

#pac-input {
  background-color: #fff;
  font-family: Roboto;
  font-size: 15px;
  font-weight: 300;
  margin-left: 12px;
  padding: 0 11px 0 13px;
  text-overflow: ellipsis;
  width: 400px;
}

#pac-input:focus {
  border-color: #4d90fe;
}

#title {
  color: #fff;
  background-color: #4d90fe;
  font-size: 25px;
  font-weight: 500;
  padding: 6px 12px;
}

#target {
  width: 345px;
}
</style>


<input id="pac-input"class="controls"type="text"placeholder="Search Box"/>
<div id='map'></div>



  <!-- <iframe
  width="300"
  height="450"
  style="border:0"
  loading="lazy"
  allowfullscreen
  src="https://www.google.com/maps/embed/v1/view?key=<%=ENV['GOOGLE_MAPS_API_KEY']%>&center=32.0853,34.7818&zoom=13"
  >
  </iframe> 
-->

<script>

function initMap() {
  console.log('in initmap')
  const map = new google.maps.Map(document.getElementById("map"), {
    zoom: 13,
    //center: {lat: 32.0853, lng: 34.7818},
  });

  console.log('built map initmap')  
  console.log('added locations')
}

function initAutocomplete() {
  const map = new google.maps.Map(document.getElementById("map"), {
    center: {lat: 32.0853, lng: 34.7818},
    //center: { lat: -33.8688, lng: 151.2195 },
    zoom: 13,
    mapTypeId: "roadmap",
  });
  // Create the search box and link it to the UI element.
  const input = document.getElementById("pac-input");
  const searchBox = new google.maps.places.SearchBox(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  // Bias the SearchBox results towards current map's viewport.
  map.addListener("bounds_changed", () => {
    searchBox.setBounds(map.getBounds());
  });
  let markers = [];
  // Listen for the event fired when the user selects a prediction and retrieve
  // more details for that place.
  searchBox.addListener("places_changed", () => {
    const places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }
    // Clear out the old markers.
    markers.forEach((marker) => {
      marker.setMap(null);
    });
    markers = [];
    // For each place, get the icon, name and location.
    const bounds = new google.maps.LatLngBounds();
    places.forEach((place) => {
      if (!place.geometry || !place.geometry.location) {
        console.log("Returned place contains no geometry");
        return;
      }
      const icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25),
      };
      // Create a marker for each place.
      markers.push(
        new google.maps.Marker({
          map,
          icon,
          title: place.name,
          position: place.geometry.location,
        })
      );

      if (place.geometry.viewport) {
        // Only geocodes have viewport.
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
      }
    });
    map.fitBounds(bounds);
  });

  <% locations.each do |location| %>
    var myLatLng = { lat: <%= location[:lat].to_i %>, lng: <%=location[:lng].to_i %> };
    
    var marker = new google.maps.Marker({
      position: myLatLng,
      map,
      title: "Hello World!",
    });
    marker.setMap(map);
    console.log('adding marker',marker)
  <% end %>
}

//https://developers.google.com/maps/documentation/javascript/examples/places-searchbox
initAutocomplete();
//initMap();
</script>